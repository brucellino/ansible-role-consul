{{ with secret "pki_hah_int/issue/hah_int_role" "common_name=[[ ansible_hostname ]].node.[[ data_centre ]].consul" "ttl=24h" "alt_names=[[ ansible_hostname ]].station, [[ ansible_hostname ]].node.consul,[[ ansible_hostname ]].hashiatho.me, [[ ansible_hostname ]].brucellino.github.beta.tailscale.net" }}
{{ .Data.certificate | writeToFile "[[ consul_data_dir ]]/agent-certs/[[ data_centre ]]-consul-agent-[[ ansible_hostname ]].pem" "consul" "consul" "0644" }}
{{ .Data.private_key | writeToFile "[[ consul_data_dir ]]/agent-certs/[[ data_centre ]]-consul-agent-[[ ansible_hostname ]]-key.pem" "consul" "consul" "0400" }}
{{ .Data.issuing_ca | writeToFile "[[ consul_data_dir ]]/agent-certs/consul-agent-ca.pem" "consul" "consul" "0644" }}
{{ end }}
#node_name = "[[ ansible_hostname ]]"
#node_id = "{{ sprig_uuidv4 }}"
auto_reload_config = true
datacenter = "[[ data_centre ]]"
data_dir = "[[ consul_data_dir ]]"

{{ with secret "hashiatho.me-v2/consul" }}
encrypt = "{{ .Data.data.gossip_key }}"
{{ end }}

# Logging
## Logging is defined at directory level
log_file = "[[ consul_log_dir ]]"
log_rotate_duration = "[[ consul_log_rotate_duration ]]"
log_rotate_bytes = [[ consul_log_rotate_bytes ]]
log_rotate_max_files = [[ consul_log_rotate_max_files ]]

tls {
  defaults {
    ca_file = "[[ consul_data_dir ]]/agent-certs/consul-agent-ca.pem"
    cert_file = "[[ consul_data_dir ]]/agent-certs/[[ data_centre ]]-consul-agent-[[ ansible_hostname ]].pem"
    key_file = "[[ consul_data_dir ]]/agent-certs/[[ data_centre ]]-consul-agent-[[ ansible_hostname ]]-key.pem"
    verify_incoming = [[ verify_incoming | bool | lower ]]
    verify_outgoing = [[ verify_outgoing | bool | lower ]]
  }
  grpc {
    use_auto_cert = true
  }
}
disable_remote_exec = false
ports {
  dns = 53
  http = 8500
  https = 8443
  grpc = 8502
  grpc_tls = 8503
  serf_lan = 8301
  server = 8300
}

recursors = [{%- for s in recursor_dns -%}"[[ s ]]"{%- if not loop.last -%},{% endif %}{% endfor %}]
# retry_join = [{%- for s in server_ips -%}"[[ s ]]"{%- if not loop.last -%},{% endif %}{% endfor %}]
rejoin_after_leave = true
client_addr = "0.0.0.0"
advertise_addr = "{{ sockaddr "GetInterfaceIP \"tailscale0\"" }}"
# Loop over server group entries
retry_join = ["bare","pi3","inky"]

# Enable Consul ACLs
acl = {
  enabled = true
  default_policy = "allow"
  enable_token_persistence = true
  tokens {
    initial_management = {{ with secret "hashiatho.me-v2/consul" }}"{{ .Data.http_token }}"{{ end }}
  }
}

server = [[ is_server | bool | lower ]]

{% if is_server %}
autopilot {

  cleanup_dead_servers = true
  last_contact_threshold = "10s"
  server_stabilization_time = "20s"
}
ui_config {
  enabled = true
}
auto_encrypt {
  allow_tls = true
}
{% else %}
auto_encrypt {
  tls = true
}

{% endif %}
